@model WebUi.Model.Project.ProjectViewModel

@{
    ViewBag.Title = "EditProject";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}
<br/>
@if (Session["user"] == null)
{
    <p>@Html.ActionLink(@Resource.LoginPlease, "Index", "Login")</p>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal"> 
            <h2>Edit <strong>@Model.Project.Name</strong></h2>
            <hr/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <h4>@ViewBag.Message</h4>
                </div>
            </div>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.Project.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Project.Name, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.DeadLine, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Project.DeadLine, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.Project.DeadLine, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.EffortInHours, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.EffortInHours, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Project.EffortInHours, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.EffortInCurrency, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Project.EffortInCurrency, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Project.EffortInCurrency, "", new {@class = "text-danger"})
                </div>
            </div>            
            <div class="form-group">
                @Html.LabelFor(model => model.Project.CurrencyId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Project.CurrencyId, new SelectList(Model.CurrencyList, "Id", "Code"), @Model.CurrencyCode, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Project.CurrencyId, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.TeamId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Project.TeamId, new SelectList(Model.TeamList, "Id", "Name"), @Model.TeamName, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Project.TeamId, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.StatusId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Project.StatusId, new SelectList(Model.StatusList, "Id", "Name"), "Select Status", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Project.StatusId, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Project.ClientId, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Project.ClientId, new SelectList(Model.ClientList, "Id", "Name"), "Select Client", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Project.ClientId, "", new {@class = "text-danger"})
                </div>
            </div>
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink(WebUi.Resource.BackToList, "ProjectList")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
