@model WebUi.Model.Project.ProjectViewModel
@{
    ViewBag.Title = "AddnewProject";
    Layout = "~/Views/Shared/_Admin_layout.cshtml";
}

<h2>Add new Project</h2>

<hr/>

@if (Session["user"] == null)
{
<p>@Html.ActionLink(@Resource.LoginPlease, "Index", "Login")</p>
}
else
{

using (Html.BeginForm())
 {
     @Html.AntiForgeryToken()

     <div class="form-horizontal">
         <hr/>
         <div class="form-group">
             <div class="col-md-offset-2 col-md-10">
                 @ViewBag.Message
             </div>
         </div>

         @Html.ValidationSummary(true, "", new {@class = "text-danger"})
         <div class="form-group">
             @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                 @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
             </div>
         </div>

         <div class="form-group">
             @Html.LabelFor(model => model.DeadLine, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.EditorFor(model => model.DeadLine, new {htmlAttributes = new {@class = "form-control"}})
                 @Html.ValidationMessageFor(model => model.DeadLine, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.EffortInHours, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.EditorFor(model => model.EffortInHours, new {htmlAttributes = new {@class = "form-control"}})
                 @Html.ValidationMessageFor(model => model.EffortInHours, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.EffortInCurrency, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.EditorFor(model => model.EffortInCurrency, new {htmlAttributes = new {@class = "form-control"}})
                 @Html.ValidationMessageFor(model => model.EffortInCurrency, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.TeamId, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.DropDownListFor(model => model.TeamId, new SelectList(Model.TeamList, "Id", "Name"), "Select Team", new {@class = "form-control"})
                 @Html.ValidationMessageFor(model => model.TeamId, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.StatusId, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.StatusList, "Id", "Name"), "Select Status", new {@class = "form-control"})
                 @Html.ValidationMessageFor(model => model.StatusId, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             @Html.LabelFor(model => model.ClientId, htmlAttributes: new {@class = "control-label col-md-2"})
             <div class="col-md-10">
                 @Html.DropDownListFor(model => model.ClientId, new SelectList(Model.ClientList, "Id", "Name"), "Select Client", new {@class = "form-control"})
                 @Html.ValidationMessageFor(model => model.ClientId, "", new {@class = "text-danger"})
             </div>
         </div>
         <div class="form-group">
             <div class="col-md-offset-2 col-md-10">
                 <input type="submit" Value="Create" class="btn btn-default"/>
             </div>
         </div>
     </div>
 }
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}